func	79
main	79
(	79
)	79
{	79
Solution	80
var	80
=	80
create	80
Solution	80
(	80
)	80
;	80
int	81
ans	81
=	81
var	81
.	81
arithmeticTriplets	81
(	81
{	81
1	81
,	81
2	81
,	81
4	81
,	81
5	81
}	81
,	81
-	81
2	81
)	81
;	81
print	82
(	82
ans	82
)	82
;	82
}	83
class	85
Solution	85
{	85
global	86
int	86
arithmeticTriplets	86
(	86
int	86
[	86
]	86
arr	86
,	86
int	86
diff	86
)	86
{	86
Map	87
<	87
Integer	87
,	87
Integer	87
>	87
map	87
=	87
new	87
HashMap	87
<	87
>	87
(	87
)	87
;	87
int	88
n	88
=	88
arr	88
.	88
length	88
;	88
for	89
(	89
int	89
i	89
=	89
0	89
;	89
i	89
<	89
n	89
;	89
i	89
=	89
i	89
+	89
1	89
)	89
{	89
map	90
.	90
put	90
(	90
arr	90
[	90
i	90
]	90
,	90
i	90
)	90
;	90
}	91
int	92
ans	92
=	92
0	92
;	92
for	93
(	93
int	93
i	93
=	93
0	93
;	93
i	93
<	93
n	93
;	93
i	93
=	93
i	93
+	93
1	93
)	93
{	93
int	94
num	94
=	94
arr	94
[	94
i	94
]	94
;	94
int	95
ind	95
=	95
map	95
.	95
get	95
(	95
num	95
)	95
;	95
if	96
(	96
map	96
.	96
get	96
(	96
num	96
-	96
diff	96
)	96
!=	96
null	96
&&	96
map	96
.	96
get	96
(	96
num	96
+	96
diff	96
)	96
!=	96
null	96
)	96
{	96
ans	97
+	97
+	97
;	97
}	98
}	99
return	100
ans	100
;	100
}	102
}	103
